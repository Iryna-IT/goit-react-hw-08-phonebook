{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","functions/isUnique.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-operations.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/ContactsView.js","views/Views.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","message","addContact","newContact","contact","name","number","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getExistContacts","state","contacts","getLoading","loading","getContactsListToShow","createSelector","filter","toUpperCase","includes","isUnique","searchName","console","log","find","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAdd","existContacts","alert","reset","className","styles","form_contact","onSubmit","this","container_contact","htmlFor","label_contact","headline_contact","type","input_contact","placeholder","onChange","required","pattern","btn_add","Component","defaultProps","connect","contactsSelectors","contactsOperations","filterActions","filterContacts","Filter","onSearch","form_search","label_search","input_search","event","filterOperations","ContactList","onDelete","length","contact_list","map","id","Contact","handleDelete","target","parentNode","contact_item","btn_delete","onClick","ContactsView","container","isLoadingContacts","mapDispatchToProps","module","exports"],"mappings":"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","file":"static/js/3.4eeb6db3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = newContact => async dispatch => {\r\n  const contact = { name: newContact.name, number: newContact.number };\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\nconst getExistContacts = state => state.contacts.contacts;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContactsListToShow = createSelector(\r\n  [getExistContacts, getFilter],\r\n  (contacts, filter) => {\r\n    if (filter === '') {\r\n      return contacts;\r\n    } else {\r\n      return contacts.filter(contact =>\r\n        contact.name.toUpperCase().includes(filter.toUpperCase()),\r\n      );\r\n    }\r\n  },\r\n);\r\n\r\nexport default { getLoading, getExistContacts, getContactsListToShow };\r\n","const isUnique = (contacts, searchName) => {\r\n  console.log(contacts);\r\n  if (\r\n    contacts.find(({ name }) => name.toUpperCase() === searchName.toUpperCase())\r\n  ) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport default isUnique;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport isUnique from '../../functions/isUnique';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onAdd: PropTypes.func,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd, existContacts } = this.props;\r\n\r\n    if (!isUnique(existContacts, this.state.name)) {\r\n      return alert(`${this.state.name} is already in contacts!`);\r\n    } else {\r\n      onAdd({ name, number });\r\n\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form_contact} onSubmit={this.handleSubmit}>\r\n        <div className={styles.container_contact}>\r\n          <label htmlFor=\"name\" className={styles.label_contact}>\r\n            <span className={styles.headline_contact}>Name</span>\r\n            <input\r\n              type=\"text\"\r\n              className={styles.input_contact}\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              placeholder=\"Enter name\"\r\n              onChange={this.handleChange}\r\n              required\r\n            ></input>\r\n          </label>\r\n        </div>\r\n        <div className={styles.container_contact}>\r\n          <label htmlFor=\"phone\" className={styles.label_contact}>\r\n            <span className={styles.headline_contact}>Phone</span>\r\n            <input\r\n              type=\"tel\"\r\n              className={styles.input_contact}\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Enter phone XXX-XX-XX\"\r\n              pattern=\"^(\\d{3})-\\d{2}-\\d{2}$\"\r\n              onChange={this.handleChange}\r\n              required\r\n            ></input>\r\n          </label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className={styles.btn_add}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: contactsSelectors.getExistContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAdd: newContact => dispatch(contactsOperations.addContact(newContact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import filterActions from './filter-actions';\r\n\r\nconst filterContacts = filter => dispatch => {\r\n  dispatch(filterActions.filterContacts(filter));\r\n};\r\n\r\nexport default { filterContacts };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { filterOperations } from '../../redux/filter/';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n  static propTypes = {\r\n    onSearch: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { onSearch } = this.props;\r\n    return (\r\n      <form className={styles.form_search}>\r\n        <label htmlFor=\"filter\" className={styles.label_search}>\r\n          Find contacts by name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={styles.input_search}\r\n          placeholder=\"Enter the name\"\r\n          onChange={onSearch}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSearch: event =>\r\n    dispatch(filterOperations.filterContacts(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nclass ContactList extends Component {\r\n  static defaultProps = {\r\n    existContacts: [],\r\n  };\r\n\r\n  static propTypes = {\r\n    existContacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { existContacts } = this.props;\r\n    const { onDelete } = this.props;\r\n    if (existContacts.length === 0) {\r\n      return <div>There are no contacts</div>;\r\n    } else {\r\n      return (\r\n        <ul className={styles.contact_list}>\r\n          {existContacts.map(contact => (\r\n            <Contact\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              onDelete={onDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass Contact extends Component {\r\n  static defaultProps = {\r\n    id: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n  };\r\n\r\n  handleDelete = e => {\r\n    const { onDelete } = this.props;\r\n    const contactId = e.target.parentNode.id;\r\n    onDelete(contactId);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, number } = this.props;\r\n    return (\r\n      <li className={styles.contact_item} id={id}>\r\n        {' '}\r\n        {name} : {number}\r\n        <button\r\n          type=\"button\"\r\n          className={styles.btn_delete}\r\n          onClick={this.handleDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  existContacts: contactsSelectors.getContactsListToShow(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  onDelete: contactId => dispatch(contactsOperations.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\n\r\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\r\n\r\nimport styles from './Views.module.css';\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\n// export default connect(mapStateToProps, null)(ContactsView);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Views_container__3gTXq\",\"form\":\"Views_form__DZFNQ\",\"label\":\"Views_label__1rD_o\",\"headline\":\"Views_headline__-coJr\",\"input\":\"Views_input__3Zu7C\",\"btn\":\"Views_btn__F6V0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_contact\":\"ContactForm_container_contact__3nv-J\",\"label_contact\":\"ContactForm_label_contact__1ZEfp\",\"headline_contact\":\"ContactForm_headline_contact__8Jz9d\",\"input_contact\":\"ContactForm_input_contact__2OUbZ\",\"form_contact\":\"ContactForm_form_contact__obbHr\",\"btn_add\":\"ContactForm_btn_add__1gNnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_search\":\"Filter_form_search__QjewA\",\"label_search\":\"Filter_label_search__3U0e-\",\"input_search\":\"Filter_input_search__2dXSI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__39SO2\",\"contact_item\":\"ContactList_contact_item__o_QdC\",\"btn_delete\":\"ContactList_btn_delete__IT8fO\"};"],"sourceRoot":""}